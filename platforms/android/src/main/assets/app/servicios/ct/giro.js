"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
require("rxjs/add/operator/do");
require("rxjs/add/operator/map");
//Exportaci√≥n de la clase usuario
var GiroService = (function () {
    //constructor del http para los servicios REST
    function GiroService(http) {
        this.http = http;
    }
    //Llamado al servicio REST "get"
    GiroService.prototype.getQuote = function (giro) {
        var headers = new http_1.Headers();
        headers.append("Content-Type", "application/json");
        this.http.get("192.168.2.153:8810/Painanis/rest/painanis/validacp", { headers: headers })
            .map(function (response) { return response.json(); })
            .subscribe(function (result) {
            console.log(JSON.stringify(result));
        }, function (error) {
            console.log("ERROR: ", error);
        });
    };
    //Llamado al servicio REST "post"
    GiroService.prototype.postQuote = function (giro) {
        var ttctPersona = [giro];
        var ttctRegistro = [giro];
        console.log(ttctPersona);
        console.log(JSON.stringify({ "request": { "tt_ctPersona": { ttctPersona: ttctPersona, ttctRegistro: ttctRegistro }
            }
        }));
        var headers = new http_1.Headers();
        headers.append("Content-Type", "application/json");
        this.http.post("http://192.168.2.153:8810/Pruebas/rest/Evento/Post", JSON.stringify({ "request": { "tt_ctPersona": { ttctPersona: ttctPersona, ttctRegistro: ttctRegistro }
            }
        }), { headers: headers })
            .map(function (response) { return response.json(); })
            .subscribe(function (result) {
            console.log(JSON.stringify(result));
            console.log(result.response.oplResultado);
            console.log(result.response.opcMensaje);
        }, function (error) {
            console.log("ERROR: ", error);
        });
    };
    return GiroService;
}());
GiroService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], GiroService);
exports.GiroService = GiroService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2lyby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdpcm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBMkM7QUFDM0Msc0NBQXdEO0FBR3hELGdDQUE4QjtBQUM5QixpQ0FBK0I7QUFDL0IsaUNBQWlDO0FBRWpDLElBQWEsV0FBVztJQUV0Qiw4Q0FBOEM7SUFDOUMscUJBQW9CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO0lBQUcsQ0FBQztJQUVsQyxnQ0FBZ0M7SUFDOUIsOEJBQVEsR0FBUixVQUFTLElBQVU7UUFDZixJQUFJLE9BQU8sR0FBRyxJQUFJLGNBQU8sRUFBRSxDQUFDO1FBQzVCLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsb0RBQW9ELEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUM7YUFDeEYsR0FBRyxDQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFmLENBQWUsQ0FBQzthQUNoQyxTQUFTLENBQUMsVUFBQSxNQUFNO1lBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDdEMsQ0FBQyxFQUFFLFVBQUEsS0FBSztZQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELGlDQUFpQztJQUNqQywrQkFBUyxHQUFULFVBQVUsSUFBVTtRQUNqQixJQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLElBQUksWUFBWSxHQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUd6QixPQUFPLENBQUMsR0FBRyxDQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxTQUFTLEVBQ25CLEVBQUMsY0FBYyxFQUNiLEVBQUMsV0FBVyxhQUFBLEVBQUMsWUFBWSxjQUFBLEVBQUM7YUFDM0I7U0FDRixDQUFDLENBQUMsQ0FBQTtRQUNuQixJQUFJLE9BQU8sR0FBRyxJQUFJLGNBQU8sRUFBRSxDQUFDO1FBQzVCLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsb0RBQW9ELEVBQ25FLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxTQUFTLEVBQ1IsRUFBQyxjQUFjLEVBQ2IsRUFBQyxXQUFXLGFBQUEsRUFBQyxZQUFZLGNBQUEsRUFBQzthQUMzQjtTQUNGLENBQUMsRUFDWixFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQzthQUVwQixHQUFHLENBQUMsVUFBQSxRQUFRLElBQUksT0FBQSxRQUFRLENBQUMsSUFBSSxFQUFFLEVBQWYsQ0FBZSxDQUFDO2FBQ2hDLFNBQVMsQ0FBQyxVQUFBLE1BQU07WUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDMUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRTFDLENBQUMsRUFBRSxVQUFBLEtBQUs7WUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQztJQUNuQixDQUFDO0lBQ0wsa0JBQUM7QUFBRCxDQUFDLEFBbERELElBa0RDO0FBbERZLFdBQVc7SUFEdkIsaUJBQVUsRUFBRTtxQ0FJZSxXQUFJO0dBSG5CLFdBQVcsQ0FrRHZCO0FBbERZLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEh0dHAsIEhlYWRlcnMsIFJlc3BvbnNlIH0gZnJvbSBcIkBhbmd1bGFyL2h0dHBcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL1J4XCI7XHJcbmltcG9ydCB7IEdpcm8gfWZyb20gXCIuLi8uLi9tb2RlbG9zL2N0L2dpcm9cIjtcclxuaW1wb3J0IFwicnhqcy9hZGQvb3BlcmF0b3IvZG9cIjtcclxuaW1wb3J0IFwicnhqcy9hZGQvb3BlcmF0b3IvbWFwXCI7XHJcbi8vRXhwb3J0YWNpw7NuIGRlIGxhIGNsYXNlIHVzdWFyaW9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgR2lyb1NlcnZpY2Uge1xyXG5cclxuICAvL2NvbnN0cnVjdG9yIGRlbCBodHRwIHBhcmEgbG9zIHNlcnZpY2lvcyBSRVNUXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwKSB7fVxyXG4gIFxyXG4gIC8vTGxhbWFkbyBhbCBzZXJ2aWNpbyBSRVNUIFwiZ2V0XCJcclxuICAgIGdldFF1b3RlKGdpcm86IEdpcm8pIHtcclxuICAgICAgICBsZXQgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcbiAgICAgICAgaGVhZGVycy5hcHBlbmQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xyXG4gICAgICB0aGlzLmh0dHAuZ2V0KFwiMTkyLjE2OC4yLjE1Mzo4ODEwL1BhaW5hbmlzL3Jlc3QvcGFpbmFuaXMvdmFsaWRhY3BcIiwgeyBoZWFkZXJzOiBoZWFkZXJzIH0pXHJcbiAgICAgIC5tYXAocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG4gICAgICAuc3Vic2NyaWJlKHJlc3VsdCA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXN1bHQpKTtcclxuICAgICAgICB9LCBlcnJvciA9PiB7XHJcbiAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVSUk9SOiBcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL0xsYW1hZG8gYWwgc2VydmljaW8gUkVTVCBcInBvc3RcIlxyXG4gICAgcG9zdFF1b3RlKGdpcm86IEdpcm8pIHtcclxuICAgICAgIHZhciB0dGN0UGVyc29uYSA9IFtnaXJvXTtcclxuICAgICAgIHZhciB0dGN0UmVnaXN0cm8gID0gW2dpcm9dO1xyXG4gICAgICAgY29uc29sZS5sb2codHRjdFBlcnNvbmEpXHJcbiAgICAgICBcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKCBKU09OLnN0cmluZ2lmeSh7IFwicmVxdWVzdFwiIDogXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1widHRfY3RQZXJzb25hXCIgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3R0Y3RQZXJzb25hLHR0Y3RSZWdpc3Ryb31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuICAgICAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcbiAgICAgICAgdGhpcy5odHRwLnBvc3QoXCJodHRwOi8vMTkyLjE2OC4yLjE1Mzo4ODEwL1BydWViYXMvcmVzdC9FdmVudG8vUG9zdFwiLCBcclxuICAgICAgICBKU09OLnN0cmluZ2lmeSh7IFwicmVxdWVzdFwiIDogXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1widHRfY3RQZXJzb25hXCIgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3R0Y3RQZXJzb25hLHR0Y3RSZWdpc3Ryb31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBcclxuICAgICAgICAgICAgICB7IGhlYWRlcnM6IGhlYWRlcnMgfSlcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAubWFwKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgICAgICAgICAuc3Vic2NyaWJlKHJlc3VsdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpO1xyXG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQucmVzcG9uc2Uub3BsUmVzdWx0YWRvKTtcclxuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0LnJlc3BvbnNlLm9wY01lbnNhamUpO1xyXG5cclxuICAgICAgICAgICAgICAgIH0sIGVycm9yID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFUlJPUjogXCIsIGVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgIH1cclxufSJdfQ==