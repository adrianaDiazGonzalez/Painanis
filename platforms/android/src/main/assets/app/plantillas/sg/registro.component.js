"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//importaciones de recursos a utilizar
var core_1 = require("@angular/core");
var registro_1 = require("../../modelos/sg/registro");
var registro_2 = require("../../servicios/sg/registro");
//Declaraci√≥n de los componentes de la vista
var RegistroComponent = (function () {
    function RegistroComponent(registroService) {
        this.registroService = registroService;
        this.firstSwitchState = false;
        this.secondSwitchState = true;
        this.registro = new registro_1.Registro();
        this.registro.genero = false;
    }
    RegistroComponent.prototype.submit = function () {
        console.log("HOLA");
        this.registroService.postQuote(this.registro);
    };
    RegistroComponent.prototype.onFirstChecked = function (args) {
        var firstSwitch = args.object;
        if (firstSwitch.checked) {
            this.firstSwitchState = false;
        }
        else {
            this.secondSwitchState = true;
        }
    };
    return RegistroComponent;
}());
RegistroComponent = __decorate([
    core_1.Component({
        selector: "my-app",
        providers: [registro_2.RegistroService],
        templateUrl: "plantillas/sg/registro.html",
        styleUrls: ["plantillas/css/registro.css"]
    }),
    __metadata("design:paramtypes", [registro_2.RegistroService])
], RegistroComponent);
exports.RegistroComponent = RegistroComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0cm8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicmVnaXN0cm8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQXNDO0FBQ3RDLHNDQUEwQztBQUMxQyxzREFBcUQ7QUFDckQsd0RBQThEO0FBTzlELDRDQUE0QztBQVE1QyxJQUFhLGlCQUFpQjtJQUsxQiwyQkFBb0IsZUFBZ0M7UUFBaEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBSjdDLHFCQUFnQixHQUFHLEtBQUssQ0FBQztRQUN6QixzQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFJNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLG1CQUFRLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBQyxLQUFLLENBQUM7SUFDL0IsQ0FBQztJQUVELGtDQUFNLEdBQU47UUFDSSxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRU0sMENBQWMsR0FBckIsVUFBc0IsSUFBSTtRQUN0QixJQUFJLFdBQVcsR0FBVyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3RDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDbEMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQztRQUNuQyxDQUFDO0lBQ0wsQ0FBQztJQWtDTCx3QkFBQztBQUFELENBQUMsQUF4REQsSUF3REM7QUF4RFksaUJBQWlCO0lBUDdCLGdCQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsUUFBUTtRQUNsQixTQUFTLEVBQUUsQ0FBQywwQkFBZSxDQUFDO1FBQzVCLFdBQVcsRUFBQyw2QkFBNkI7UUFDekMsU0FBUyxFQUFFLENBQUMsNkJBQTZCLENBQUM7S0FDM0MsQ0FBQztxQ0FPdUMsMEJBQWU7R0FMM0MsaUJBQWlCLENBd0Q3QjtBQXhEWSw4Q0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydGFjaW9uZXMgZGUgcmVjdXJzb3MgYSB1dGlsaXphclxyXG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBSZWdpc3RybyB9IGZyb20gXCIuLi8uLi9tb2RlbG9zL3NnL3JlZ2lzdHJvXCI7XHJcbmltcG9ydCB7IFJlZ2lzdHJvU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNpb3Mvc2cvcmVnaXN0cm9cIjtcclxuaW1wb3J0ICogYXMgZGF0ZVBpY2tlck1vZHVsZSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9kYXRlLXBpY2tlclwiO1xyXG5pbXBvcnQgeyBEYXRlUGlja2VyIH0gZnJvbSBcInVpL2RhdGUtcGlja2VyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGF0YSB9IGZyb20gXCJkYXRhL29ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSBcInVpL3N3aXRjaFwiO1xyXG5cclxuXHJcbi8vRGVjbGFyYWNpw7NuIGRlIGxvcyBjb21wb25lbnRlcyBkZSBsYSB2aXN0YVxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogXCJteS1hcHBcIixcclxuICBwcm92aWRlcnM6IFtSZWdpc3Ryb1NlcnZpY2VdLFxyXG4gIHRlbXBsYXRlVXJsOlwicGxhbnRpbGxhcy9zZy9yZWdpc3Ryby5odG1sXCIsXHJcbiAgc3R5bGVVcmxzOiBbXCJwbGFudGlsbGFzL2Nzcy9yZWdpc3Ryby5jc3NcIl1cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBSZWdpc3Ryb0NvbXBvbmVudCB7XHJcbiAgICBwdWJsaWMgZmlyc3RTd2l0Y2hTdGF0ZSA9IGZhbHNlO1xyXG4gICAgcHVibGljIHNlY29uZFN3aXRjaFN0YXRlID0gdHJ1ZTtcclxuICAgIHJlZ2lzdHJvOiBSZWdpc3RybztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlZ2lzdHJvU2VydmljZTogUmVnaXN0cm9TZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RybyA9IG5ldyBSZWdpc3RybygpO1xyXG4gICAgICAgIHRoaXMucmVnaXN0cm8uZ2VuZXJvPWZhbHNlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzdWJtaXQoKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkhPTEFcIik7XHJcbiAgICAgICAgdGhpcy5yZWdpc3Ryb1NlcnZpY2UucG9zdFF1b3RlKHRoaXMucmVnaXN0cm8pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwdWJsaWMgb25GaXJzdENoZWNrZWQoYXJncykge1xyXG4gICAgICAgIGxldCBmaXJzdFN3aXRjaCA9IDxTd2l0Y2g+YXJncy5vYmplY3Q7XHJcbiAgICAgICAgaWYgKGZpcnN0U3dpdGNoLmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5maXJzdFN3aXRjaFN0YXRlID0gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgIHRoaXMuc2Vjb25kU3dpdGNoU3RhdGUgPSB0cnVlOyAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qXHJcbiAgICBvblBpY2tlckxvYWRlZChhcmdzKSB7XHJcbiAgICAgICAgbGV0IGRhdGVQaWNrZXIgPSA8RGF0ZVBpY2tlcj5hcmdzLm9iamVjdDtcclxuICAgICAgICBkYXRlUGlja2VyLnllYXIgPSAxOTcwO1xyXG4gICAgICAgIGRhdGVQaWNrZXIubW9udGggPSAxO1xyXG4gICAgICAgIGRhdGVQaWNrZXIuZGF5ID0gMTsgIFxyXG4gICAgfVxyXG5cclxuICAgIG9uRGF0ZUNoYW5nZWQoYXJncykge1xyXG4gICAgICAgIC8qY29uc29sZS5sb2coXCJEYXRlIGNoYW5nZWRcIik7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJOZXcgdmFsdWU6IFwiICsgYXJncy52YWx1ZSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJPbGQgdmFsdWU6IFwiICsgYXJncy5vbGRWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EYXlDaGFuZ2VkKGFyZ3MpIHtcclxuICAgICAgICAvKmNvbnNvbGUubG9nKFwiRGF5IGNoYW5nZWRcIik7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJOZXcgdmFsdWU6IFwiICsgYXJncy52YWx1ZSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJPbGQgdmFsdWU6IFwiICsgYXJncy5vbGRWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb250aENoYW5nZWQoYXJncykge1xyXG4gICAgICAgLyogY29uc29sZS5sb2coXCJNb250aCBjaGFuZ2VkXCIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiTmV3IHZhbHVlOiBcIiArIGFyZ3MudmFsdWUpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiT2xkIHZhbHVlOiBcIiArIGFyZ3Mub2xkVmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uWWVhckNoYW5nZWQoYXJncykge1xyXG4gICAgIC8qICAgY29uc29sZS5sb2coXCJZZWFyIGNoYW5nZWRcIik7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJOZXcgdmFsdWU6IFwiICsgYXJncy52YWx1ZSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJPbGQgdmFsdWU6IFwiICsgYXJncy5vbGRWYWx1ZSk7XHJcbiAgICB9ICAgKi9cclxuXHJcblxyXG59XHJcbiJdfQ==